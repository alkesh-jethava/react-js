{"version":3,"sources":["Components/Button.js","Components/LogoName.js","Components/TextInput.js","Login/Login.js","Login/ForgotPassword.js","FILE/Dashboard.js","Login/RegisterUser.js","Login/ResetPassword.js","Admin/AdminPanel.js","Admin/AdminLogin.js","FILE/AboutUs.js","FILE/ContactUs.js","App.js","serviceWorker.js","index.js"],"names":["Buttons","style","width","this","props","Button","color","fontWeight","backgroundColor","fullWidth","onClick","type","name","title","React","Component","LogoName","className","TextInput","value","maxLength","onChange","required","lbl","Login","login","state","email","setState","emailerror","password","passworderror","submit","history","push","fetch","method","headers","body","JSON","stringify","then","response","json","responseJson","localStorage","setItem","alert","catch","error","console","change","event","target","marginTop","display","justifyContent","to","ForgotPassword","forgotpassword","componentName","register","username","mobile","cpassword","usernameerror","mobileerror","cpassworderror","resetPassword","mode","placeholder","ContactUS","height","border","for","id","App","path","component","exact","Dashboard","AboutUs","RegisterUser","ResetPassword","AdminLogin","AdminPanel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.568406ba.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../App.css';\r\n\r\nclass Buttons extends React.Component{\r\n    render(){\r\n        return(\r\n            <div style={{width: this.props.width}}>\r\n                <Button style={{color: '#fff',\r\n                                fontWeight: 'bold',\r\n                                backgroundColor: '#00A86B'}} \r\n                                fullWidth \r\n                                onClick={this.props.onClick}\r\n                                type={this.props.type}\r\n                                name=\"submit\"\r\n                                >\r\n                                {this.props.title}\r\n                </Button>  \r\n            </div>             \r\n        )\r\n    }\r\n}\r\n\r\nexport default Buttons;","import React from 'react';\r\n\r\nclass LogoName extends React.Component{\r\n    render(){\r\n        return(\r\n        <div className=\"top\">\r\n            <p className=\"title\">\r\n                <span style={{color:\"#00A86B\"}}>G</span>ANESH <span  style={{color:\"#00A86B\"}}>G</span>ARMENT</p>\r\n            <hr></hr>\r\n            <p className=\"p\">retailer & wholesaler</p>\r\n        </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport  default LogoName;","import React from 'react';\r\nimport '../CSS/TextInput.css'\r\n\r\nclass TextInput extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"boxinput\">   \r\n                <input type={this.props.type}\r\n                       value={this.props.value}\r\n                       name={this.props.name}\r\n                       maxLength={this.props.maxLength}\r\n                       onChange={this.props.onChange}\r\n                       required\r\n                    //    autoComplete=\"off\"\r\n                    />\r\n                       <label >{this.props.lbl}</label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextInput;","import React from 'react';\r\nimport Buttons from '../Components/Button';\r\nimport LogoName from '../Components/LogoName';\r\nimport TextInput from '../Components/TextInput';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../CSS/Login.css';\r\n\r\nclass Login extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            emailerror: '',\r\n            passworderror: '',\r\n        }\r\n    }\r\n\r\n    login = () => \r\n    {  \r\n            if(this.state.email === ''){\r\n                this.setState({\r\n                    emailerror: \"Please Enter Mobile email\"\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    emailerror: \"\"\r\n                })\r\n            }\r\n            if(this.state.password === ''){\r\n                this.setState({\r\n                    passworderror: \"Please Enter Password\"\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    passworderror: \"\"\r\n                })\r\n            }\r\n            if(this.state.email && this.state.password){\r\n                this.submit();\r\n            }\r\n    }\r\n    \r\n    submit = () =>\r\n    {\r\n\r\n        if(this.state.email === 'Admin' && this.state.password === 'Admin')\r\n        {\r\n            this.props.history.push('/AdminLogin')\r\n        }\r\n        else\r\n        {\r\n            fetch('http://localhost/SignUp/login.php', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json', \r\n                    'Content-Type': 'Application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                if(responseJson === \"LOGIN\"){\r\n                    this.props.history.push('/Dashboard')\r\n                    localStorage.setItem(\"loginToken\", \"login token\");\r\n                }else{\r\n                    alert(responseJson)\r\n                }\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    change = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n        if(this.state.email !== ''){\r\n            this.setState({ emailerror: ''})\r\n        }\r\n        else if(this.state.password !== ''){\r\n            this.setState({ passworderror: ''})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"login_container\">\r\n                <div className=\"login_form\">\r\n                    <div className=\"login_logo\">\r\n                    <LogoName/>   \r\n                    </div>\r\n\r\n                    <h3>Sign In</h3>\r\n\r\n                     <form>  \r\n                         <div > \r\n\r\n                            <TextInput type=\"text\"\r\n                                       value={this.state.email}\r\n                                       name=\"email\"\r\n                                       onChange={this.change}\r\n                                       lbl=\"Email\"\r\n                                    \r\n                                       />\r\n                            <p className=\"error\">{this.state.emailerror}</p>\r\n                           \r\n                            <TextInput type=\"password\"\r\n                                       value={this.state.password}\r\n                                       name=\"password\"\r\n                                       onChange={this.change}\r\n                                       lbl=\"Password\"\r\n                                \r\n                                       />\r\n                            <p className=\"error\">{this.state.passworderror}</p>\r\n                           \r\n                            <div style={{marginTop: 10, display: 'flex', justifyContent: 'center'}}>\r\n                                <Buttons title=\"Sign In\" width=\"350px\" onClick={this.login}/>\r\n                            </div>\r\n                            <div style={{marginTop: 10, display: 'flex', justifyContent: 'center'}}>\r\n                                <Buttons title=\"Register\" width=\"350px\" onClick={() =>  this.props.history.push('/RegisterUser')}/>\r\n                            </div>\r\n                        </div> \r\n\r\n                    </form>\r\n                    <div className=\"fp2\">\r\n                       <p  className=\"fp\"> <span> Forgot Password ? <NavLink to=\"/forgotpassword\" className=\"AdminLink\"> Click Here </NavLink></span></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )} \r\n   }\r\n\r\nexport default Login;","import React from 'react';\r\nimport LogoName from '../Components/LogoName';\r\nimport TextInput from '../Components/TextInput';\r\nimport Buttons from '../Components/Button';\r\n\r\nclass ForgotPassword extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            email: '',\r\n            emailerror: ''\r\n        }\r\n    }\r\n\r\n    change = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n        if(this.state.email !== '')\r\n        {\r\n            this.setState({\r\n                emailerror: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    forgotpassword = () => {\r\n\r\n        if(this.state.email === '')\r\n        {\r\n            this.setState({\r\n                emailerror: \"Please Enter Email ID\"\r\n            })\r\n        }\r\n        else\r\n        {\r\n            fetch('http://localhost/SignUp/verify_email.php', {\r\n            method: 'POST',\r\n            headers:\r\n            {\r\n                'Accept': 'Application/json',\r\n                'Content-Type': 'Application/json',\r\n            },                                                                      \r\n            body: JSON.stringify({\r\n                email: this.state.email\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n             alert(responseJson)\r\n           }).catch((error) => {\r\n            console.error(error);\r\n        });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"login_container\">\r\n            <div className=\"login_form\">    \r\n                <div className=\"login_logo\">\r\n                <LogoName/>   \r\n                </div>\r\n\r\n                <h3>VERIFY EMAIL</h3>\r\n\r\n                 <form>  \r\n                     <div className=\"txtinput\"> \r\n\r\n                        <TextInput type=\"text\"\r\n                                   lbl=\"Enter Email ID\"\r\n                                   value={this.state.email}\r\n                                   name=\"email\"\r\n                                   onChange={this.change}\r\n                                   />\r\n                        <p className=\"error\">{this.state.emailerror}</p>\r\n                       \r\n                        <div style={{marginTop: 10, display: 'flex', justifyContent: 'center'}}>\r\n                            <Buttons title=\"verify\" width=\"350px\" onClick={this.forgotpassword}/>\r\n                        </div>\r\n                       \r\n\r\n                    </div> \r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ForgotPassword;","import React, { Component } from 'react';\r\n\r\nexport default class componentName extends Component {\r\n  render() {\r\n    return (\r\n      <div> textInComponent </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Buttons from '../Components/Button';\r\nimport TextInput from '../Components/TextInput'\r\n\r\nexport default class componentName extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n            username: '',\r\n            email: '',\r\n            mobile: '',\r\n            password: '',\r\n            cpassword: '',\r\n\r\n            usernameerror: '',\r\n            emailerror: '',\r\n            mobileerror: '',\r\n            passworderror: '',\r\n            cpassworderror: ''\r\n           \r\n        }\r\n    }\r\n\r\n    register = () => {\r\n\r\n        if(this.state.username === '' && this.state.email === '' && this.state.mobile === ''  && this.state.password === '' && this.state.cpassword === '')\r\n        {\r\n            this.setState({\r\n                usernameerror: \"Please Enter Username\",\r\n                emailerror: \"Please Enter Email\",\r\n                mobileerror: \"Please Enter Mobile Number\",\r\n                passworderror: \"Please Enter Password\",\r\n                cpassworderror: \"Please Enter Confirm Password\"\r\n            })   \r\n        }\r\n        else if(this.state.username === '')\r\n        {\r\n            this.setState({\r\n                usernameerror: \"Please Enter Username\"\r\n            })\r\n        }\r\n        else if(this.state.email === '')\r\n        {\r\n            this.setState({\r\n                emailerror: \"Please Enter Email\"\r\n            })\r\n        }\r\n        else if(this.state.mobile === '')\r\n        {\r\n            this.setState({\r\n                mobileerror: \"Please Enter Mobile\"\r\n            })\r\n        }\r\n        else if(this.state.password === '')\r\n        {\r\n            this.setState({\r\n                passworderror: \"Please Enter Password\"\r\n            })\r\n        }\r\n        else if(this.state.cpassword === '')\r\n        {\r\n            this.setState({\r\n                cpassworderror: \"Please Enter Confirm Password\"\r\n            })\r\n        }\r\n        else\r\n        {\r\n            fetch('http://localhost/SignUp/registration.php',\r\n             {\r\n                method: 'POST',\r\n                headers: \r\n                {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'Application/json'\r\n                },\r\n                body: JSON.stringify\r\n                ({\r\n                    username: this.state.username,  \r\n                    email: this.state.email,\r\n                    mobile: this.state.mobile,\r\n                    password: this.state.password,\r\n                    cpassword: this.state.cpassword,\r\n                })\r\n            })\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                alert(responseJson)\r\n            }).catch((error) => \r\n            {\r\n                console.error(error);\r\n            });\r\n        }  \r\n    }\r\n\r\n    change = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n        if(this.state.username !== '')\r\n        {\r\n            this.setState({\r\n                usernameerror: \"\"\r\n            })\r\n        }\r\n        if(this.state.email !== '')\r\n        {\r\n            this.setState({\r\n                emailerror: \"\"\r\n            })\r\n        }\r\n        if(this.state.mobile !== '')\r\n        {\r\n            this.setState({\r\n                mobileerror: \"\"\r\n            })\r\n        }\r\n        if(this.state.password !== '')\r\n        {\r\n            this.setState({\r\n                passworderror: \"\"\r\n            })\r\n        }\r\n        if(this.state.cpassword !== '')\r\n        {\r\n            this.setState({\r\n                cpassworderror: \"\"\r\n            })\r\n        } \r\n    }\r\n\r\n  render() {\r\n    return (\r\n        \r\n        <div className=\"login_container\">\r\n        <div className=\"login_form\">\r\n            <h3 style={{marginTop: '70px'}}>Registration</h3>\r\n\r\n             <form style={{marginTop: '50px'}}>  \r\n                 <div  > \r\n\r\n                 <TextInput type=\"text\"\r\n                            value={this.state.username}\r\n                            name=\"username\"\r\n                            onChange={this.change}\r\n                            lbl=\"Full Name\"/>\r\n                            <p className=\"error\">{this.state.usernameerror}</p>\r\n\r\n                <TextInput type=\"text\" \r\n                            value={this.state.email}\r\n                            name=\"email\"\r\n                            onChange={this.change}\r\n                            lbl=\"Email Address\"/>   \r\n                             <p className=\"error\">{this.state.emailerror}</p>\r\n\r\n                 <TextInput type=\"text\"\r\n                            value={this.state.mobile}\r\n                            name=\"mobile\"\r\n                            onChange={this.change}\r\n                            lbl=\"Mobile Number\"/>\r\n                             <p className=\"error\">{this.state.mobileerror}</p>\r\n\r\n                <TextInput type=\"text\"\r\n                            value={this.state.password}\r\n                            name=\"password\"\r\n                            onChange={this.change}\r\n                            lbl=\"Password\"/>       \r\n                             <p className=\"error\">{this.state.passworderror}</p>\r\n\r\n                <TextInput type=\"text\"\r\n                            value={this.state.cpassword}\r\n                            name=\"cpassword\"\r\n                            onChange={this.change}\r\n                            lbl=\"Confirm Password\"/>  \r\n                             <p className=\"error\">{this.state.cpassworderror}</p>\r\n                                        \r\n                    <div style={{marginTop: 10, display: 'flex', justifyContent: 'center'}}>\r\n                        <Buttons title=\"Create Account\" width=\"350px\" onClick={this.register}/>\r\n                    </div>\r\n                </div> \r\n            </form>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport LogoName from '../Components/LogoName';\r\nimport Buttons from '../Components/Button';\r\nimport TextInput from '../Components/TextInput'\r\n\r\nexport default class componentName extends Component {\r\n      constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            password: '',\r\n            cpassword: '',\r\n            passworderror: '',\r\n            cpassworderror: '',\r\n        }\r\n    }\r\n\r\n    resetPassword = () => {\r\n\r\n        if(this.state.password === '' && this.state.cpassword === '')\r\n        {\r\n            this.setState({\r\n                passworderror: \"Please Enter Password\",\r\n                cpassworderror: \"Please Enter Confirm Password\"\r\n            })\r\n        }\r\n        else if(this.state.password === '')\r\n        {\r\n            this.setState({\r\n                passworderror: \"Please Enter PAssword\"\r\n            })\r\n        }\r\n        else if(this.state.cpassword === '')\r\n        {\r\n            this.setState({\r\n                cpassworderror: \"Please Enter Confirm Password\"\r\n            })\r\n        }\r\n        else\r\n        {\r\n            fetch('http://localhost/SignUp/reset_password.php', {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: { \r\n                    'Accept': 'Application/json ',\r\n                      'Content-Type': 'Application/json' ,\r\n                   \r\n                },\r\n                body: JSON.stringify({\r\n                    password: this.state.password,\r\n                    cpassword: this.state.cpassword,\r\n                })\r\n            })\r\n             .then((response) => response.json())\r\n            .then(responseJson => {\r\n                if(responseJson === 'PasswordUpdated')\r\n                {\r\n                    this.props.history.push('/')\r\n                }\r\n              }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    change = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n         if(this.state.password !== '')\r\n        {\r\n            this.setState({\r\n                passworderror: \"\"\r\n            })\r\n        }\r\n         if(this.state.cpassword !== '')\r\n        {\r\n            this.setState({\r\n                cpassworderror: \"\"\r\n            })\r\n        }\r\n\r\n       \r\n    }\r\n\r\n\r\n  render() {    \r\n    return (\r\n        \r\n        <div className=\"login_container\">\r\n        <div className=\"login_form\">\r\n            <div className=\"login_logo\">\r\n            <LogoName/>   \r\n            </div>\r\n\r\n            <h3 className=\"a1\" style={{marginTop: '140px'}}>Reset Password</h3>\r\n\r\n             <form>  \r\n                 <div className=\"txtinput\" style={{marginTop: '70px', }}> \r\n\r\n\r\n               \r\n                <TextInput type=\"text\"\r\n                            value={this.state.password}\r\n                            name=\"password\"\r\n                            onChange={this.change}\r\n                            lbl=\"New Password\"/>     \r\n                            <p className=\"error\">{this.state.passworderror}</p>  \r\n\r\n                <TextInput type=\"text\"\r\n                            placeholder=\"confirm password\" \r\n                            value={this.state.cpassword}\r\n                            name=\"cpassword\"\r\n                            onChange={this.change}\r\n                            lbl=\"Confirm Password\"/>  \r\n                             <p className=\"error\">{this.state.cpassworderror}</p>    \r\n                   \r\n                    <div style={{marginTop: 10,display: 'flex', justifyContent: 'center'}}>\r\n                        <Buttons title=\"Create Password\" width=\"350px\" onClick={this.resetPassword}/>\r\n                    </div>\r\n    \r\n                </div> \r\n            </form>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class componentName extends Component {\r\n  render() {\r\n    return (\r\n      <div> textInComponent </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class componentName extends Component {\r\n  render() {\r\n    return (\r\n      <div> textInComponent </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class componentName extends Component {\r\n  render() {\r\n    return (\r\n      <div> textInComponent </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../CSS/ContactUs.css'\r\n\r\nexport default class ContactUS extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"mainDiv\">\r\n        <div style={{display: 'flex' }}>\r\n          {/* <div className=\"mapLogo\">\r\n              <LogoName/>\r\n          </div> */}\r\n\r\n          <div className=\"mapH1\">\r\n            <h1>Get in Touch</h1>\r\n          </div>\r\n          </div>\r\n\r\n\r\n         <div className=\"centerDiv\">\r\n\r\n            <div className=\"container \">\r\n              <form style={{width:\"500px\", height:\"500px\", border: 'none'}}>\r\n              \r\n\r\n            <label for=\"fname\">First Name</label>\r\n            <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\"/>\r\n\r\n            <label for=\"lname\">Last Name</label>\r\n            <input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Your last name..\"/>\r\n\r\n            <label for=\"country\">Country</label>\r\n            <select id=\"country\" name=\"country\">\r\n              <option value=\"australia\">India</option>\r\n              <option value=\"canada\">Canada</option>\r\n              <option value=\"usa\">USA</option>\r\n            </select>\r\n\r\n            <label for=\"subject\">Subject</label>\r\n            <textarea id=\"subject\" name=\"subject\" placeholder=\"Write something..\" style={{height: '170px'}}></textarea>\r\n\r\n            <input type=\"submit\" value=\"Submit\"/>\r\n\r\n\r\n              </form>\r\n            </div> \r\n            \r\n\r\n            <div className=\"mapDiv2\">\r\n                {/* <iframe  src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1855.6419803130545!2d70.45486381591498!3d21.535749298741518!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x39580368e103d179%3A0x87b48d4037b1e153!2sGanesh%20Garment!5e0!3m2!1sen!2sin!4v1588330261393!5m2!1sen!2sin\" \r\n                style={{width:\"700px\", height:\"550px\", border: 'none'}} ></iframe>       */}\r\n            </div>\r\n\r\n        </div> \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport Login from './Login/Login';\nimport ForgotPassword from './Login/ForgotPassword';\nimport Dashboard from './FILE/Dashboard';\nimport RegisterUser from './Login/RegisterUser';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport ResetPassword from './Login/ResetPassword';\nimport AdminPanel from './Admin/AdminPanel';\nimport AdminLogin from './Admin/AdminLogin';\nimport AboutUs from './FILE/AboutUs';\nimport ContactUS from './FILE/ContactUs';\n\nexport default class App extends React.Component{\n  render(){\n    return(\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/\" component={Login} exact/>\n\n            <Route path=\"/Dashboard\" component={Dashboard} />\n            <Route path=\"/AboutUs\" component={AboutUs} />\n            <Route path=\"/ContactUS\" component={ContactUS} />\n\n            <Route path=\"/RegisterUser\" component={RegisterUser} />\n\n            <Route path=\"/forgotpassword\" component={ForgotPassword}/>\n            <Route path=\"/ResetPassword\" component={ResetPassword}/>\n\n            <Route path=\"/AdminLogin\" component={AdminLogin}/>\n            <Route path=\"/AdminPanel\" component={AdminPanel}/>\n            \n          </Switch>\n        </BrowserRouter>\n    )\n  }\n} ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}